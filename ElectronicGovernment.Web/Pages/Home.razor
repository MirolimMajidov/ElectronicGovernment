@page "/"
@using E_Government.Web.Components
@using ElectronicGovernment.DTO
@using Microsoft.AspNetCore.Authorization
@inject IDialogService DialogService;
@inject HttpClient HttpClient
@attribute [Authorize]

<MudContainer>
    <MudStack Row="true" Class="mb-3">
        <MudText Typo="Typo.h5">Организации</MudText>
    </MudStack>
    <MudPaper Class="d-flex justify-content-between mb-3">
        <MudTextField T="string" ValueChanged="@(s => OnSearch(s))" Placeholder="Search" Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Small" Class="ml-3">
        </MudTextField>
    </MudPaper>

    <MudTable @ref="_table" T="OrganizationInfo" Items="@Elements" MultiSelection="true" @bind-SelectedItems="selectedItems" Hover="true"
              OnRowClick="@OnRowClick" @bind-SelectOnRowClick="@_selectOnRowClick">
        <HeaderContent>
            <MudTh>Название</MudTh>
            <MudTh>Описание</MudTh>
            <MudTh></MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Nr">@context.Name</MudTd>
            <MudTd DataLabel="Sign">@context.Description</MudTd>
            <MudTd DataLabel="Actions">
                <MudIconButton Icon="@Icons.Material.Filled.Edit" aria-label="edit" Color="Color.Info"></MudIconButton>
                <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Secondary" aria-label="delete"></MudIconButton>
            </MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[] { 10, 25, 50, 100 }"/>
        </PagerContent>
    </MudTable>


</MudContainer>

@code {
    private int gg = 10;
    private MudTable<Doc> table;
    private string searchString = null;
    IList<IBrowserFile> files = new List<IBrowserFile>();

    private void UploadFiles(IBrowserFile file)
    {
        files.Add(file);
//TODO upload the files to the server
    }

    private HashSet<OrganizationInfo> selectedItems = new();

    private IEnumerable<OrganizationInfo> Elements = new List<OrganizationInfo>
    {
        new OrganizationInfo
        {
            Name = "SRP",
            Description = "Company"
        },
        new OrganizationInfo
        {
            Name = "SRP",
            Description = "Company"
        },
        new OrganizationInfo
        {
            Name = "SRP",
            Description = "Company"
        },
        new OrganizationInfo
        {
            Name = "SRP",
            Description = "Company"
        },
        new OrganizationInfo
        {
            Name = "SRP",
            Description = "Company"
        }
    };

    private bool _selectOnRowClick = true;
    private MudTable<OrganizationInfo> _table;
    private string _selectedItemText = "No row clicked";
    

    void OnRowClick(TableRowClickEventArgs<OrganizationInfo> args)
    {
        _selectedItemText = $"{args} ({args})";
    }

    private void OnSearch(string text)
    {
        searchString = text;
        table.ReloadServerData();
    }

    private async void ShowCreateModal()
    {
        var modal = await DialogService.ShowAsync<CreateDepartmentComponent>("Create Department");
        var modalResult = await modal.Result;
        if (modalResult.Canceled) return;
    }

    class Doc
    {
        public string Name { get; set; }
        public string Reciever { get; set; }
        public DateTime CreatedAt { get; set; } = DateTime.Now;
        public DateTime ChangedAt { get; set; } = DateTime.Now;
        public string Status { get; set; } = "Created";
    }

}
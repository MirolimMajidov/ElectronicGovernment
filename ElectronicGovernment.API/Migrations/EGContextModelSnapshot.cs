// <auto-generated />
using System;
using BankManagementSystem.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElectronicGovernment.API.Migrations
{
    [DbContext(typeof(EGContext))]
    partial class EGContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ElectronicGovernment.API.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("OperatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LeaderId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("OperatorId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a8ad25a-fbaa-4fda-a73b-81527e9da610"),
                            LeaderId = new Guid("32761140-64e4-4c9d-b9f9-dc82a5a91131"),
                            Name = "Department 1",
                            OperatorId = new Guid("ddadc393-6644-41e2-9c89-4e73dc6bd830"),
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("89ab32cc-4f65-4dfa-a5f7-18be9fa34608"),
                            LeaderId = new Guid("53c1c562-2298-43d6-811c-dcfe0bc299f0"),
                            Name = "Department 2",
                            OperatorId = new Guid("a63e8ab6-e40f-46de-91bb-61bb8cccbb7c"),
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        });
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.DocumentTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("DocumentTemplates");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CEOId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OperatorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CEOId");

                    b.HasIndex("OperatorId");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c"),
                            Description = "To automate all departments of the Government",
                            Name = "Electronic Government"
                        });
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9df29616-ef70-4473-a23c-c19785704848"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("3e6f4a44-ff47-45f4-88a6-cf573064276c"),
                            Name = "CEO"
                        },
                        new
                        {
                            Id = new Guid("7845152b-7d35-4f9b-a41a-ed8bc869d02a"),
                            Name = "Lead"
                        },
                        new
                        {
                            Id = new Guid("4a7d0e7a-2cda-476b-93fe-bf5f0413d054"),
                            Name = "Global Operator"
                        },
                        new
                        {
                            Id = new Guid("81aea9e8-ca3e-43fb-b90b-5e6e1003f977"),
                            Name = "Operator"
                        });
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId", "RoleId")
                        .IsUnique();

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d4ec2f38-415d-4216-9d3d-8bcc0c269520"),
                            RoleId = new Guid("9df29616-ef70-4473-a23c-c19785704848"),
                            UserId = new Guid("73e49a0c-2dce-4615-8397-9fd519c5f8c0")
                        },
                        new
                        {
                            Id = new Guid("63747848-2c32-4775-bfac-518762cb65ca"),
                            RoleId = new Guid("3e6f4a44-ff47-45f4-88a6-cf573064276c"),
                            UserId = new Guid("0d7a7563-5b29-40c9-8fbf-095620f547b9")
                        },
                        new
                        {
                            Id = new Guid("a82ee14c-3b6f-4cbe-92d1-455d8ef8a50a"),
                            RoleId = new Guid("4a7d0e7a-2cda-476b-93fe-bf5f0413d054"),
                            UserId = new Guid("1018f072-d70b-4e34-baf0-37bae980f977")
                        },
                        new
                        {
                            Id = new Guid("32d18cc7-3e74-4c94-a7da-e65d5247a2af"),
                            RoleId = new Guid("7845152b-7d35-4f9b-a41a-ed8bc869d02a"),
                            UserId = new Guid("32761140-64e4-4c9d-b9f9-dc82a5a91131")
                        },
                        new
                        {
                            Id = new Guid("7ded988f-8ca6-4609-a504-c9b32ce180c7"),
                            RoleId = new Guid("7845152b-7d35-4f9b-a41a-ed8bc869d02a"),
                            UserId = new Guid("53c1c562-2298-43d6-811c-dcfe0bc299f0")
                        },
                        new
                        {
                            Id = new Guid("e2a9258a-90a9-4f21-b350-65892721523e"),
                            RoleId = new Guid("81aea9e8-ca3e-43fb-b90b-5e6e1003f977"),
                            UserId = new Guid("ddadc393-6644-41e2-9c89-4e73dc6bd830")
                        },
                        new
                        {
                            Id = new Guid("31c01df2-53c1-4c30-af69-73455a3d5804"),
                            RoleId = new Guid("81aea9e8-ca3e-43fb-b90b-5e6e1003f977"),
                            UserId = new Guid("a63e8ab6-e40f-46de-91bb-61bb8cccbb7c")
                        });
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Citizen", b =>
                {
                    b.HasBaseType("ElectronicGovernment.API.Models.User");

                    b.HasDiscriminator().HasValue("Citizen");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Employee", b =>
                {
                    b.HasBaseType("ElectronicGovernment.API.Models.User");

                    b.HasDiscriminator().HasValue("Employee");

                    b.HasData(
                        new
                        {
                            Id = new Guid("73e49a0c-2dce-4615-8397-9fd519c5f8c0"),
                            FirstName = "Admin",
                            Password = "Admin",
                            Username = "Admin"
                        },
                        new
                        {
                            Id = new Guid("0d7a7563-5b29-40c9-8fbf-095620f547b9"),
                            FirstName = "CEO",
                            LastName = "Organization",
                            Password = "Organization",
                            Username = "CEO"
                        },
                        new
                        {
                            Id = new Guid("1018f072-d70b-4e34-baf0-37bae980f977"),
                            FirstName = "Global",
                            LastName = "Operator",
                            Password = "Operator",
                            Username = "GlobalOperator"
                        },
                        new
                        {
                            Id = new Guid("32761140-64e4-4c9d-b9f9-dc82a5a91131"),
                            FirstName = "Leader",
                            LastName = "Department1",
                            Password = "Dep1",
                            Username = "LeadDep1"
                        },
                        new
                        {
                            Id = new Guid("53c1c562-2298-43d6-811c-dcfe0bc299f0"),
                            FirstName = "Leader",
                            LastName = "Department2",
                            Password = "Dep2",
                            Username = "LeadDep2"
                        },
                        new
                        {
                            Id = new Guid("ddadc393-6644-41e2-9c89-4e73dc6bd830"),
                            FirstName = "Operator",
                            LastName = "Department1",
                            Password = "Dep1",
                            Username = "OpeDep1"
                        },
                        new
                        {
                            Id = new Guid("a63e8ab6-e40f-46de-91bb-61bb8cccbb7c"),
                            FirstName = "Leader",
                            LastName = "Department2",
                            Password = "Dep2",
                            Username = "OpeDep2"
                        });
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Department", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.Employee", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId");

                    b.HasOne("ElectronicGovernment.API.Models.Employee", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId");

                    b.HasOne("ElectronicGovernment.API.Models.Organization", "Organization")
                        .WithMany("Departments")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leader");

                    b.Navigation("Operator");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Document", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.DocumentTemplate", "Template")
                        .WithMany("Documents")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Template");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.DocumentTemplate", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.Department", "Department")
                        .WithMany("DocumentTemplates")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Organization", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.Employee", "CEO")
                        .WithMany()
                        .HasForeignKey("CEOId");

                    b.HasOne("ElectronicGovernment.API.Models.Employee", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId");

                    b.Navigation("CEO");

                    b.Navigation("Operator");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.UserRole", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ElectronicGovernment.API.Models.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Department", b =>
                {
                    b.Navigation("DocumentTemplates");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.DocumentTemplate", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Organization", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.User", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using BankManagementSystem.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElectronicGovernment.API.Migrations
{
    [DbContext(typeof(EGContext))]
    [Migration("20240515085142_AddedAttachmentsToDocument")]
    partial class AddedAttachmentsToDocument
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ElectronicGovernment.API.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOnlyForWorkFlow")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("OperatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LeaderId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("OperatorId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2923bdf8-f599-4779-9c7c-4f08a1769200"),
                            IsOnlyForWorkFlow = false,
                            LeaderId = new Guid("15963c23-d361-4cfe-9e50-4305c5bfd055"),
                            Name = "Department 1",
                            OperatorId = new Guid("5a6a9e54-8599-4ecc-a968-6d82568b91bf"),
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("401f69d9-d0f3-450f-bba6-c1158d459c21"),
                            IsOnlyForWorkFlow = false,
                            LeaderId = new Guid("75093a84-1d44-4077-abf2-aa2051147b9a"),
                            Name = "Department 2",
                            OperatorId = new Guid("4ea8002a-18fb-4c5b-a9f6-dfe9f5ed9e66"),
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        });
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Attachments")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Attachments");

                    b.Property<string>("AttachmentsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.DocumentTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("DocumentTemplates");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CEOId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OperatorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CEOId");

                    b.HasIndex("OperatorId");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c"),
                            Description = "To automate all departments of the Government",
                            Name = "Electronic Government"
                        });
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RoleType")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "RoleType")
                        .IsUnique();

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d87df871-0ca6-4c1e-b77b-7b845a74b7e4"),
                            RoleType = 1,
                            UserId = new Guid("5d79c398-a9ff-4ee5-a14e-4606440f6cf8")
                        },
                        new
                        {
                            Id = new Guid("c03c5102-9a1a-4213-acf4-063548834d5b"),
                            RoleType = 2,
                            UserId = new Guid("77ae3e74-18f1-4727-8422-a56ee9fba9c3")
                        },
                        new
                        {
                            Id = new Guid("38192567-b0f2-452b-a9ee-9d4589851c3d"),
                            RoleType = 3,
                            UserId = new Guid("77ae3e74-18f1-4727-8422-a56ee9fba9c3")
                        },
                        new
                        {
                            Id = new Guid("2b13244c-6866-4e97-9de7-789bc58738cc"),
                            RoleType = 4,
                            UserId = new Guid("aa913809-d93e-4226-bec8-837ad3e8c6fb")
                        },
                        new
                        {
                            Id = new Guid("d7a6ec1f-2be3-4034-9d58-5e9155b3b6d5"),
                            RoleType = 3,
                            UserId = new Guid("15963c23-d361-4cfe-9e50-4305c5bfd055")
                        },
                        new
                        {
                            Id = new Guid("d3eb7fa9-dfd2-4f5b-82bf-daffb43e6318"),
                            RoleType = 3,
                            UserId = new Guid("75093a84-1d44-4077-abf2-aa2051147b9a")
                        },
                        new
                        {
                            Id = new Guid("2dbc42b1-6150-4b0b-81b4-cfba9fec2e56"),
                            RoleType = 5,
                            UserId = new Guid("5a6a9e54-8599-4ecc-a968-6d82568b91bf")
                        },
                        new
                        {
                            Id = new Guid("f296cfa5-abe0-4568-88b3-8be2cf4d647b"),
                            RoleType = 5,
                            UserId = new Guid("4ea8002a-18fb-4c5b-a9f6-dfe9f5ed9e66")
                        });
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Citizen", b =>
                {
                    b.HasBaseType("ElectronicGovernment.API.Models.User");

                    b.HasDiscriminator().HasValue("Citizen");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Employee", b =>
                {
                    b.HasBaseType("ElectronicGovernment.API.Models.User");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("OrganizationId");

                    b.HasDiscriminator().HasValue("Employee");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5d79c398-a9ff-4ee5-a14e-4606440f6cf8"),
                            FirstName = "Admin",
                            Password = "Admin",
                            Username = "Admin",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("77ae3e74-18f1-4727-8422-a56ee9fba9c3"),
                            FirstName = "CEO",
                            LastName = "Organization",
                            Password = "Organization",
                            Username = "CEO",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("aa913809-d93e-4226-bec8-837ad3e8c6fb"),
                            FirstName = "Global",
                            LastName = "Operator",
                            Password = "Operator",
                            Username = "GlobalOperator",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("15963c23-d361-4cfe-9e50-4305c5bfd055"),
                            FirstName = "Leader",
                            LastName = "Department1",
                            Password = "Dep1",
                            Username = "LeadDep1",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("75093a84-1d44-4077-abf2-aa2051147b9a"),
                            FirstName = "Leader",
                            LastName = "Department2",
                            Password = "Dep2",
                            Username = "LeadDep2",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("5a6a9e54-8599-4ecc-a968-6d82568b91bf"),
                            FirstName = "Operator",
                            LastName = "Department1",
                            Password = "Dep1",
                            Username = "OpeDep1",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("4ea8002a-18fb-4c5b-a9f6-dfe9f5ed9e66"),
                            FirstName = "Leader",
                            LastName = "Department2",
                            Password = "Dep2",
                            Username = "OpeDep2",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        });
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Department", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.Employee", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId");

                    b.HasOne("ElectronicGovernment.API.Models.Employee", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId");

                    b.HasOne("ElectronicGovernment.API.Models.Organization", "Organization")
                        .WithMany("Departments")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leader");

                    b.Navigation("Operator");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Document", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.DocumentTemplate", "Template")
                        .WithMany("Documents")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Template");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.DocumentTemplate", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.Department", "Department")
                        .WithMany("DocumentTemplates")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Organization", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.Employee", "CEO")
                        .WithMany()
                        .HasForeignKey("CEOId");

                    b.HasOne("ElectronicGovernment.API.Models.Employee", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId");

                    b.Navigation("CEO");

                    b.Navigation("Operator");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.UserRole", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Employee", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.Organization", "Organization")
                        .WithMany("Employees")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Department", b =>
                {
                    b.Navigation("DocumentTemplates");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.DocumentTemplate", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Organization", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.User", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}

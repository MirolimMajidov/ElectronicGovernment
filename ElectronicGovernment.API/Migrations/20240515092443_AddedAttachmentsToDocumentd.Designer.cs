// <auto-generated />
using System;
using BankManagementSystem.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElectronicGovernment.API.Migrations
{
    [DbContext(typeof(EGContext))]
    [Migration("20240515092443_AddedAttachmentsToDocumentd")]
    partial class AddedAttachmentsToDocumentd
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ElectronicGovernment.API.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOnlyForWorkFlow")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("OperatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LeaderId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("OperatorId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("27939632-d223-49ec-a9a5-86ccf04c9c54"),
                            IsOnlyForWorkFlow = false,
                            LeaderId = new Guid("c871c293-79e7-4cbb-a365-d194578475c3"),
                            Name = "Department 1",
                            OperatorId = new Guid("e641cee4-58ee-42b0-b155-f090b1130d13"),
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("a4a194cd-0c34-4d17-8403-4dc4195c3862"),
                            IsOnlyForWorkFlow = false,
                            LeaderId = new Guid("34488a0b-c00f-4974-8b43-37e805c6f714"),
                            Name = "Department 2",
                            OperatorId = new Guid("c3a21171-47b2-425d-a47b-a231345d6b4b"),
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        });
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Attachments")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Attachments");

                    b.Property<string>("AttachmentsJson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.DocumentTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("DocumentTemplates");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CEOId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OperatorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CEOId");

                    b.HasIndex("OperatorId");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c"),
                            Description = "To automate all departments of the Government",
                            Name = "Electronic Government"
                        });
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RoleType")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "RoleType")
                        .IsUnique();

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d376eea4-3e06-4213-a1ee-38838e772b9c"),
                            RoleType = 1,
                            UserId = new Guid("92b7165e-c3b1-49f3-8ed2-bf79515fbbe2")
                        },
                        new
                        {
                            Id = new Guid("2e7b5400-e775-47ff-a962-87cf89e6eb04"),
                            RoleType = 2,
                            UserId = new Guid("3cc698a7-91f1-4573-9de9-aef3c8da9c7d")
                        },
                        new
                        {
                            Id = new Guid("a88b3a43-77fb-4181-aff8-986c65e2f7ea"),
                            RoleType = 3,
                            UserId = new Guid("3cc698a7-91f1-4573-9de9-aef3c8da9c7d")
                        },
                        new
                        {
                            Id = new Guid("638c17e4-3ae6-4927-af46-0b55a5f03778"),
                            RoleType = 4,
                            UserId = new Guid("24e6879f-8110-4624-af8c-325e4e100271")
                        },
                        new
                        {
                            Id = new Guid("8ec4c680-9d8f-4648-8ac9-6306ddd8ad28"),
                            RoleType = 3,
                            UserId = new Guid("c871c293-79e7-4cbb-a365-d194578475c3")
                        },
                        new
                        {
                            Id = new Guid("c0722c38-3fb8-468d-a669-385274746b53"),
                            RoleType = 3,
                            UserId = new Guid("34488a0b-c00f-4974-8b43-37e805c6f714")
                        },
                        new
                        {
                            Id = new Guid("e009c4fa-1c16-45dc-9eb0-187c71e93efc"),
                            RoleType = 5,
                            UserId = new Guid("e641cee4-58ee-42b0-b155-f090b1130d13")
                        },
                        new
                        {
                            Id = new Guid("26776e98-5fea-4acd-ad08-b4f90d5b6bb2"),
                            RoleType = 5,
                            UserId = new Guid("c3a21171-47b2-425d-a47b-a231345d6b4b")
                        });
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Citizen", b =>
                {
                    b.HasBaseType("ElectronicGovernment.API.Models.User");

                    b.HasDiscriminator().HasValue("Citizen");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Employee", b =>
                {
                    b.HasBaseType("ElectronicGovernment.API.Models.User");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("OrganizationId");

                    b.HasDiscriminator().HasValue("Employee");

                    b.HasData(
                        new
                        {
                            Id = new Guid("92b7165e-c3b1-49f3-8ed2-bf79515fbbe2"),
                            FirstName = "Admin",
                            Password = "Admin",
                            Username = "Admin",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("3cc698a7-91f1-4573-9de9-aef3c8da9c7d"),
                            FirstName = "CEO",
                            LastName = "Organization",
                            Password = "Organization",
                            Username = "CEO",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("24e6879f-8110-4624-af8c-325e4e100271"),
                            FirstName = "Global",
                            LastName = "Operator",
                            Password = "Operator",
                            Username = "GlobalOperator",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("c871c293-79e7-4cbb-a365-d194578475c3"),
                            FirstName = "Leader",
                            LastName = "Department1",
                            Password = "Dep1",
                            Username = "LeadDep1",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("34488a0b-c00f-4974-8b43-37e805c6f714"),
                            FirstName = "Leader",
                            LastName = "Department2",
                            Password = "Dep2",
                            Username = "LeadDep2",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("e641cee4-58ee-42b0-b155-f090b1130d13"),
                            FirstName = "Operator",
                            LastName = "Department1",
                            Password = "Dep1",
                            Username = "OpeDep1",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("c3a21171-47b2-425d-a47b-a231345d6b4b"),
                            FirstName = "Leader",
                            LastName = "Department2",
                            Password = "Dep2",
                            Username = "OpeDep2",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        });
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Department", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.Employee", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId");

                    b.HasOne("ElectronicGovernment.API.Models.Employee", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId");

                    b.HasOne("ElectronicGovernment.API.Models.Organization", "Organization")
                        .WithMany("Departments")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leader");

                    b.Navigation("Operator");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Document", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.DocumentTemplate", "Template")
                        .WithMany("Documents")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Template");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.DocumentTemplate", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.Department", "Department")
                        .WithMany("DocumentTemplates")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Organization", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.Employee", "CEO")
                        .WithMany()
                        .HasForeignKey("CEOId");

                    b.HasOne("ElectronicGovernment.API.Models.Employee", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId");

                    b.Navigation("CEO");

                    b.Navigation("Operator");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.UserRole", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Employee", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.Organization", "Organization")
                        .WithMany("Employees")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Department", b =>
                {
                    b.Navigation("DocumentTemplates");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.DocumentTemplate", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Organization", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.User", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}

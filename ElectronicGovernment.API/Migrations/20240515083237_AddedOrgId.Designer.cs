// <auto-generated />
using System;
using BankManagementSystem.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ElectronicGovernment.API.Migrations
{
    [DbContext(typeof(EGContext))]
    [Migration("20240515083237_AddedOrgId")]
    partial class AddedOrgId
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ElectronicGovernment.API.Models.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOnlyForWorkFlow")
                        .HasColumnType("bit");

                    b.Property<Guid?>("LeaderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("OperatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LeaderId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("OperatorId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3de05800-1edc-453b-a58d-043cd4305296"),
                            IsOnlyForWorkFlow = false,
                            LeaderId = new Guid("d1888053-30e5-440c-97cc-274295276422"),
                            Name = "Department 1",
                            OperatorId = new Guid("18137aa1-2a2a-4dc9-8a43-5f7bbded1584"),
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("b17b7d15-a161-462d-b5c9-f482121d7403"),
                            IsOnlyForWorkFlow = false,
                            LeaderId = new Guid("baa8114f-498e-4678-9163-ad1eb903c3ed"),
                            Name = "Department 2",
                            OperatorId = new Guid("00bac9d3-b015-4fb1-a856-ac970375062f"),
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        });
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Document", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TemplateId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.DocumentTemplate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("DocumentTemplates");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CEOId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OperatorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CEOId");

                    b.HasIndex("OperatorId");

                    b.ToTable("Organizations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c"),
                            Description = "To automate all departments of the Government",
                            Name = "Electronic Government"
                        });
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RoleType")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "RoleType")
                        .IsUnique();

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f4b38b2c-44c9-494c-9f08-89b5f6f8c6cf"),
                            RoleType = 1,
                            UserId = new Guid("3e8a031b-1b0b-4be8-8251-b935dc800a33")
                        },
                        new
                        {
                            Id = new Guid("9b38b704-343e-457e-8d0a-bea98f23c4c5"),
                            RoleType = 2,
                            UserId = new Guid("1e02d3aa-6c12-452a-b0c4-3a439e3ebba6")
                        },
                        new
                        {
                            Id = new Guid("078242d0-d283-49d5-8c6e-7eaf778c8e66"),
                            RoleType = 3,
                            UserId = new Guid("1e02d3aa-6c12-452a-b0c4-3a439e3ebba6")
                        },
                        new
                        {
                            Id = new Guid("a15cc6d4-126d-4298-8d0c-3e5077afe8bb"),
                            RoleType = 4,
                            UserId = new Guid("c0cacb6a-ce34-492b-aa44-388fc4107285")
                        },
                        new
                        {
                            Id = new Guid("e067bbfa-fd54-499d-9986-852848836183"),
                            RoleType = 3,
                            UserId = new Guid("d1888053-30e5-440c-97cc-274295276422")
                        },
                        new
                        {
                            Id = new Guid("f9aa69ac-d79e-4c60-bb6e-4ea9b8621d88"),
                            RoleType = 3,
                            UserId = new Guid("baa8114f-498e-4678-9163-ad1eb903c3ed")
                        },
                        new
                        {
                            Id = new Guid("ca4ad2d8-11d1-40c1-8ebc-e6918d26d53b"),
                            RoleType = 5,
                            UserId = new Guid("18137aa1-2a2a-4dc9-8a43-5f7bbded1584")
                        },
                        new
                        {
                            Id = new Guid("5cc016cc-f615-4be9-a609-b1dd35723bb7"),
                            RoleType = 5,
                            UserId = new Guid("00bac9d3-b015-4fb1-a856-ac970375062f")
                        });
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Citizen", b =>
                {
                    b.HasBaseType("ElectronicGovernment.API.Models.User");

                    b.HasDiscriminator().HasValue("Citizen");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Employee", b =>
                {
                    b.HasBaseType("ElectronicGovernment.API.Models.User");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("OrganizationId");

                    b.HasDiscriminator().HasValue("Employee");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3e8a031b-1b0b-4be8-8251-b935dc800a33"),
                            FirstName = "Admin",
                            Password = "Admin",
                            Username = "Admin",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("1e02d3aa-6c12-452a-b0c4-3a439e3ebba6"),
                            FirstName = "CEO",
                            LastName = "Organization",
                            Password = "Organization",
                            Username = "CEO",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("c0cacb6a-ce34-492b-aa44-388fc4107285"),
                            FirstName = "Global",
                            LastName = "Operator",
                            Password = "Operator",
                            Username = "GlobalOperator",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("d1888053-30e5-440c-97cc-274295276422"),
                            FirstName = "Leader",
                            LastName = "Department1",
                            Password = "Dep1",
                            Username = "LeadDep1",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("baa8114f-498e-4678-9163-ad1eb903c3ed"),
                            FirstName = "Leader",
                            LastName = "Department2",
                            Password = "Dep2",
                            Username = "LeadDep2",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("18137aa1-2a2a-4dc9-8a43-5f7bbded1584"),
                            FirstName = "Operator",
                            LastName = "Department1",
                            Password = "Dep1",
                            Username = "OpeDep1",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        },
                        new
                        {
                            Id = new Guid("00bac9d3-b015-4fb1-a856-ac970375062f"),
                            FirstName = "Leader",
                            LastName = "Department2",
                            Password = "Dep2",
                            Username = "OpeDep2",
                            OrganizationId = new Guid("2a720891-3e68-4538-bf8f-51b6b5c2067c")
                        });
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Department", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.Employee", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId");

                    b.HasOne("ElectronicGovernment.API.Models.Employee", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId");

                    b.HasOne("ElectronicGovernment.API.Models.Organization", "Organization")
                        .WithMany("Departments")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Leader");

                    b.Navigation("Operator");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Document", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.DocumentTemplate", "Template")
                        .WithMany("Documents")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Template");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.DocumentTemplate", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.Department", "Department")
                        .WithMany("DocumentTemplates")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Organization", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.Employee", "CEO")
                        .WithMany()
                        .HasForeignKey("CEOId");

                    b.HasOne("ElectronicGovernment.API.Models.Employee", "Operator")
                        .WithMany()
                        .HasForeignKey("OperatorId");

                    b.Navigation("CEO");

                    b.Navigation("Operator");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.UserRole", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Employee", b =>
                {
                    b.HasOne("ElectronicGovernment.API.Models.Organization", "Organization")
                        .WithMany("Employees")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Department", b =>
                {
                    b.Navigation("DocumentTemplates");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.DocumentTemplate", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.Organization", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ElectronicGovernment.API.Models.User", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
